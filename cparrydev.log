20181016(Thu)
1. All.docによると、mlispのコードはlisp1.6に変換されるらしい
2. ERR(), SETERR()はLISP1.6で定義されていた
3. READDATA(はREADINC()の値が'COMMENTでない場合に、処理をしている。
INFには、左端にS式があり、~から右側がコメントになっているようにみえる。
ほかのデータでも、~がコメントになっているものがあった。
INFを読み込むのはREADINF()で、
READDATA()は、READINF()から呼ばれる。
SELECTINPUT()のあとREADDATA()を呼んでいるが、selectinput()が関係しているとは思えない。

READINC()の中では
 INC(INCHAN,NIL)
 I:=READ()
 INC(NIL,NIL)
 RETURN I
しかゃっていない。READが'COMMENTを返すのだろうか。
lisp1.6にもmlispでもREAD()はそんなことはしていない。
たんにS式を返すだけだ。

わからない。


20181014()
- READINFのやっていることがわからなくなってきた
INFにはTH2で、第三要素にformのある行があるが、readinfではそこは単にそのformに対してputpropしている。
lisp1.5ではlistに対するputpropができたのだろうか

- ファイルにランダムアクセスするコードがあったが、まったく読んでいない

20181020 
 @について... RDATAには@のついた式がいくつかある
    @DEFPROPは、FUNCTIONかもしれない。

    (SETQ SETLIST (GET @SETLIST @SETS))
　　　これは変数についているのでQUOTEにみえる。
    (SETQ WTS @(17 15 12 10 9 7 6 5 4 3 1))
　　　これもまたquoteにみえる。あるいはlistかもしれない。

~    %   RESPECTIVE WEIGHTS OF THE GIVEN FLARE CONCEPTS   %

    (SETQ WTS @(17 15 12 10 9 7 6 5 4 3 1))

~    %WEIGHTS ARE ASSIGNED TO CONCEPTS RATHER THAN TO INDIVIDUAL WORDS%

    (SETQ FLARELIST (GET @FLARELIST @SETS))
    (MAPCAR (FUNCTION (LAMBDA (WT) (PROG2 (PUTPROP (CAR FLARELIST) WT @WT)
                                          (SETQ FLARELIST (CDR FLARELIST))
                                   ))) WTS)
     この1行目は上と同じ。2行目の@WTもまたquoteに思える。
     (putprop xxx 1 '1)などということはできないと思う・・・
     こめんとによると、FLARELISTにはCONCEPTがならんでいて、WTは同じ数のwightらしい。

　　RDATAはOPAR3でのみ参照していて
    EXPR  OPARINITIALIZE ();
         BEGIN
                EVAL '(INC (INPUT (PAR BLF) RDATA) NIL);
                WHILE NOT ATOM X  ⇦   ERRSET(READ(),T) DO EVAL CAR X;
                INC(NIL,T);
　　     ....
　　RDATAはデータとして読み込んで、EVALして使っているのだろうか。INC, INPUT、はわからない。lisp1.6かな
    (PAR BLF)は変数なのか???
    (PAR BLF)はa(DSKIN ..) の引数に使われている。が、DOR*の中は制御文字多発
    バイナリファイルからのデータなのだろうか。
    謎


20181022
RDATB やRDATAで、defpropがでてきて
(defprop A B C)
と書いていた。
すべてのAについて(defvar A)が必要になるので、macroでできないかやってみたが
(defmacro defprop (a b c)
(progn
 (defvar ,a)
 (setf (get ',a ',c) ,b)
)
)

だと、defvarしたaのスコープがprognの中になってしまい思ったようにならない。
defvarなしでメッセージでるけどいいのか??

別途, defvarを作ったらどうかと思ったら、rdataでは mapでdefpropをまわしていて,
そこから アトムをすべて集めるのがめんどう・・・

しかし、いずれにせよglobalなatomをどうにかする必要はでてくる。
データ中のアトムにputpropしているから・・・
動的束縛は楽だ・・・


